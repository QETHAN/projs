0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish', 'projs' ]
2 info using npm@1.2.23
3 info using node@v0.10.8
4 verbose publish [ 'projs' ]
5 verbose read json /Users/mac/Documents/my_work_space/projs/projs/projs/package.json
6 verbose cache add [ 'projs', null ]
7 verbose cache add name=undefined spec="projs" args=["projs",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: 'projs',
8 verbose parsed url   path: 'projs',
8 verbose parsed url   href: 'projs' }
9 silly lockFile af5ee7d6-projs projs
10 verbose lock projs /Users/mac/.npm/af5ee7d6-projs.lock
11 silly lockFile af5ee7d6-projs projs
12 silly lockFile af5ee7d6-projs projs
13 verbose addNamed [ 'projs', '' ]
14 verbose addNamed [ null, '' ]
15 silly lockFile b5ba72b7-projs projs@
16 verbose lock projs@ /Users/mac/.npm/b5ba72b7-projs.lock
17 silly addNameRange { name: 'projs', range: '', hasData: false }
18 verbose url raw projs
19 verbose url resolving [ 'https://registry.npmjs.org/', './projs' ]
20 verbose url resolved https://registry.npmjs.org/projs
21 info trying registry request attempt 1 at 11:27:59
22 verbose etag "2RNVESF88I8F2UAA1Z4RP3ZMR"
23 http GET https://registry.npmjs.org/projs
24 http 304 https://registry.npmjs.org/projs
25 silly registry.get cb [ 304,
25 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
25 silly registry.get     etag: '"2RNVESF88I8F2UAA1Z4RP3ZMR"',
25 silly registry.get     date: 'Mon, 07 Oct 2013 03:28:03 GMT',
25 silly registry.get     'content-length': '0' } ]
26 verbose etag projs from cache
27 silly addNameRange number 2 { name: 'projs', range: '', hasData: true }
28 silly addNameRange versions [ 'projs',
28 silly addNameRange   [ '0.0.1',
28 silly addNameRange     '0.0.2',
28 silly addNameRange     '0.0.3',
28 silly addNameRange     '0.0.4',
28 silly addNameRange     '0.0.5',
28 silly addNameRange     '0.0.6',
28 silly addNameRange     '0.0.7',
28 silly addNameRange     '0.0.9',
28 silly addNameRange     '0.1.0',
28 silly addNameRange     '0.1.1',
28 silly addNameRange     '0.1.2' ] ]
29 verbose addNamed [ 'projs', '0.1.2' ]
30 verbose addNamed [ '0.1.2', '0.1.2' ]
31 silly lockFile ce45534b-projs-0-1-2 projs@0.1.2
32 verbose lock projs@0.1.2 /Users/mac/.npm/ce45534b-projs-0-1-2.lock
33 verbose read json /Users/mac/.npm/projs/0.1.2/package/package.json
34 silly lockFile ce45534b-projs-0-1-2 projs@0.1.2
35 silly lockFile ce45534b-projs-0-1-2 projs@0.1.2
36 silly lockFile b5ba72b7-projs projs@
37 silly lockFile b5ba72b7-projs projs@
38 silly publish { name: 'projs',
38 silly publish   description: '基于nodejs的前端开发工具包，包括前端开发环境的构建，前端JavaScript/CSS的打包。',
38 silly publish   author:
38 silly publish    { name: 'Stri',
38 silly publish      email: 'stri.vip@gmail.com',
38 silly publish      url: 'http://weibo/stri' },
38 silly publish   contributors: [ { name: 'Stri', email: 'stri.vip@gmail.com' } ],
38 silly publish   bugs:
38 silly publish    { url: 'https://github.com/stri/projs/issues',
38 silly publish      email: 'stri.vip@gmail.com' },
38 silly publish   repository: { type: 'git', url: 'https://github.com/stri/projs.git' },
38 silly publish   version: '0.1.2',
38 silly publish   main: './index.js',
38 silly publish   bin: { projs: './bin/projs' },
38 silly publish   engines: { node: '>=0.4.0' },
38 silly publish   dependencies:
38 silly publish    { 'uglify-js': '2.3.6',
38 silly publish      optimist: '0.5.0',
38 silly publish      express: '3.2.5',
38 silly publish      'clean-css': '1.0.5' },
38 silly publish   readme: '### projs\n\n基于`nodejs`的前端开发工具包，包括前端开发环境的构建，前端`JavaScript`/`CSS`的打包。\n\n### 最新版本\n\n`0.1.0`\n\n### 安装命令\n\n    npm install projs -g\n    \n### 约定\n\n1. 其中的`js`和`css`目录必须放在同一目录中,如:\n\n\t\tproject/\n\t\t------js/\n\t\t------css/\n\n2. CSS的打包中，有对图片版本的处理，即如在配置中设置`css_image_version`后，则打包时，会把图片的md5值的前16位当做版本号（当然，只适用于和css同一工程的图片）\n\n3. JS的合并规则，即配置中的`js_package_depend_style`,现版本支持两种方式,请查看下面\n\n\t名称|说明|支持的版本\n----|----|----\nrequire|1.遵循`AMD`[部分规范](https://github.com/stri/projs/issues/1)|0.1.0+\nimport|合并`$import`引入的JS文件|0.1.0+\n\n\n\n### 使用方法\n\n#### 一、所有参数\n##### 命令说明：\n\n\tUsage: projs <command>\n\t\t-h    获取帮助信息\n\t\t-c    获取配置参数或设置配置参数\n\t\t-v    获取版本号\n\t\t-s    启动服务\n\t\t-f    要打包的目录或代码仓库地址\n\t\t-t    打包后输出的目录\n\t\t-u    代码仓库的用户名\n\t\t-p    代码仓库的密码\n\n#### 二、配置参数\n\n##### 命令说明：\n\t<command>: projs [name][value] -c\n\t<description>: 设置name的value或获取name的value值 [name]有如下:root,port,js_package_depend_style,css_compress,js_compress,css_image_version,css_charset,js_charset,css_comment_text,js_comment_text\n\n\n##### 参数列表：\n\n名称|默认|说明\n-------|------|-----\nroot||projs服务的目录\nport|8080|服务的端口\njs_package_depend_style|Pro|JavaScript包合并方式\ncss_compress|false|CSS是否压缩\njs_compress|false|JS是否压缩\ncss_image_version|false|CSS里的图片版本号是否添加\ncss_charset|utf-8|合并后的CSS的文件编码格式\njs_charset|utf-8|合并后的JS的文件编码格式\ncss_comment_text|无|合并后的注释文案\njs_comment_text|无|合并后的注释文案\n\n#### 三、打包项目\n\n##### 命令说明：\n\t<command>: projs -f [form|uri][可选] -t [target][必选] -u [username][可选] -p [password][可选]\n\t<description>:\n      1) 如果-f是SVN地址，则-u,-p,是[必选]\n      2) 如果只有一个参数，则为-t,即打包当前目录\n\n##### 例子：\n1.\t把SVN地址里的代码打包\n\t\t\n\t\tprojs -f "http://svn.xx" -t "/target/" -u "username" -p "12346"\n\n2.\t把A目录的项目打到B目录中\n\n\t\tprojs -f A -t B \n3. 把A目录里的文件打包\n\n\t\tprojs -f A\n\n',
38 silly publish   readmeFilename: 'README.md',
38 silly publish   _id: 'projs@0.1.2',
38 silly publish   _from: 'projs@' }
39 info prepublish projs@0.1.2
40 verbose url raw projs
41 verbose url resolving [ 'https://registry.npmjs.org/', './projs' ]
42 verbose url resolved https://registry.npmjs.org/projs
43 info trying registry request attempt 1 at 11:28:05
44 http PUT https://registry.npmjs.org/projs
45 http 409 https://registry.npmjs.org/projs
46 verbose url raw projs
47 verbose url resolving [ 'https://registry.npmjs.org/', './projs' ]
48 verbose url resolved https://registry.npmjs.org/projs
49 info trying registry request attempt 1 at 11:28:06
50 http GET https://registry.npmjs.org/projs
51 http 200 https://registry.npmjs.org/projs
52 error publish fail Cannot publish over existing version.
52 error publish fail Update the 'version' field in package.json and try again.
52 error publish fail
52 error publish fail If the previous version was published in error, see:
52 error publish fail     npm help unpublish
52 error publish fail
52 error publish fail To automatically increment version numbers, see:
52 error publish fail     npm help version
53 error System Darwin 12.5.0
54 error command "node" "/usr/local/bin/npm" "publish" "projs"
55 error cwd /Users/mac/Documents/my_work_space/projs/projs
56 error node -v v0.10.8
57 error npm -v 1.2.23
58 error code EPUBLISHCONFLICT
59 verbose exit [ 1, true ]
